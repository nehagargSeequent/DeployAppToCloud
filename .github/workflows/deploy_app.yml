name: deploy_app

on: 
  # push:
  #   paths:
  #     - infrastructure/**
  #   branches:
  #     - main
  workflow_dispatch

env:
  RG_NAME: 'aks-golang-application'
  CLUSTER_NAME: 'aks-golang-application'

jobs:
  CreateCluster:
    name: 'create kube cluster for app'
    env:
      ARM_CLIENT_ID: ${{ secrets.SVC_KUBE_CLIENTID }}
      ARM_CLIENT_SECRET: ${{ secrets.SVC_KUBE_CLIENTSECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1.2.1 

    - name: Terraform Format
      id: fmt
      run: |
        ls
        cd infrastructure
        terraform fmt -list=true -diff

    - name: Terraform Init
      id: init
      run: |
        cd infrastructure
        # terraform init -backend-config=configs/backend.tfvars.json
        terraform init
    
    - name: Terraform Validate
      id: validate
      run: |
        cd infrastructure
        terraform validate -json  

    - name: Terraform Apply
      id: apply  
      run:  |
        cd infrastructure
        terraform apply -var-file=configs/infrastructure.tfvars.json --auto-approve
        
  DeployApp:
    name: 'deploy app to the cluster'
    needs: [CreateCluster]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2 

    - name: Install Kubernetes
      uses: azure/setup-kubectl@v1
      id: install_kubectl
      with:
          version: 'v1.21.2'

    - name: Deploy app
      uses: Azure/cli@1.0.4
      with:
        inlineScript: |
          set -euo pipefail

          az login --service-principal -u ${{ secrets.SVC_KUBE_CLIENTID }} -p ${{ secrets.SVC_KUBE_CLIENTSECRET }} --tenant ${{ secrets.TENANT_ID }}
          az account set -s ${{ secrets.SUBSCRIPTION_ID }}
          az account show            
          az aks get-credentials --resource-group ${{ env.RG_NAME }} --name ${{ env.CLUSTER_NAME }}     

          ls
          cd deployment
          kubectl apply -f secretproviderclass.yaml       
          kubectl apply -f golang-app.yaml
          kubectl apply -f golang-service.yaml
    


    # - uses: Azure/setup-kubectl@v1
    # - name: Deploy app
    #   run: |
    #         set -euo pipefail

    # - name: Apply Secret Provider Class
    #   id: secret_driver
    #   run: |
    #     ls
    #     cd deployment
    #     kubectl apply -f secretproviderclass.yaml
    
    # - name: Apply app deployment
    #   id: deployment
    #   run: |
    #     cd deployment
    #     kubectl apply -f golang-app.yaml
        
    # - name: Apply app service
    #   id: service
    #   run: |
    #     cd deployment
    #     kubectl apply -f golang-service.yaml
        
       
    
